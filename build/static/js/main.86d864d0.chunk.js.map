{"version":3,"sources":["components/Contacts.js","services/contactServices.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","person","handleDeleteClick","name","number","onClick","baseUrl","contactObject","axios","post","then","response","data","get","id","delete","updatedContact","put","Title","text","Form","values","handleOnSubmit","handleNameChange","handlePhoneChange","onSubmit","onChange","type","List","persons","searchTerm","filter","val","toLocaleLowerCase","includes","map","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","setSearchTerm","useEffect","console","log","services","returnedObj","event","target","value","preventDefault","reduce","arr","concat","toLowerCase","trim","window","confirm","editable","find","edited","newObj","length","catch","err","delContact","changedPersons","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86d864d0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nconst Contact = ({person, handleDeleteClick}) => {\r\n\r\n    return (\r\n        <li>{person.name} {person.number} <button onClick={() => handleDeleteClick(person)}>delete</button></li>\r\n    )\r\n}\r\nexport default Contact;","\r\nimport axios from \"axios\";\r\n\r\nconst baseUrl = `/api/contacts`\r\n\r\nconst addContact = contactObject => {\r\n    const request = axios.post(baseUrl, contactObject)\r\n    return request.then(response => response.data)\r\n}\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data) \r\n}\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n}\r\nconst updateContact = updatedContact => {\r\n    const request = axios.put(`${baseUrl}/${updatedContact.id}`, updatedContact)\r\n    return request.then(response => response.data)\r\n}\r\nexport default {\r\n    addContact,\r\n    getAll,\r\n    deletePerson,\r\n    updateContact,\r\n}","import React, { useState, useEffect } from 'react'\n\nimport Contact from './components/Contacts'\n\nimport services from './services/contactServices'\n\nconst Title = ({text}) => {\n  return(\n    <h1>{text}</h1>\n  )\n}\n\nconst Form = ({values}) => {\n  const [handleOnSubmit, handleNameChange, handlePhoneChange] = values\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <div>\n        Name: <input onChange={handleNameChange} />\n        <br />\n        phno : <input onChange={handlePhoneChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n\nconst List = ({persons, searchTerm, handleDeleteClick}) => {\n  return (\n    <ul>\n      {persons\n        .filter((val) => {\n          if (searchTerm === \"\") {\n            return val;\n          } else if (\n            val.name\n              .toLocaleLowerCase()\n              .includes(searchTerm.toLocaleLowerCase())\n          ) {\n            return val;\n          }\n        })\n        .map((person) => (\n          <div>\n            <Contact key={person.id} person={person} handleDeleteClick={handleDeleteClick}/>\n          </div>\n        ))}\n    </ul>\n  );\n}\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const hook = () => {\n    console.log('Effect')\n    services\n      .getAll()\n      .then(returnedObj => {\n        console.log('Promise Fulfilled!')\n        console.log(returnedObj)\n        setPersons(returnedObj)\n      })\n  }\n  useEffect(hook, [])\n\n  const handleSearchInput = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n    \n  }\n  const handleDeleteClick = (delContact) => {\n    const response = window.confirm(`Do you really want to delete the contact ${delContact.name} ?`)\n    if(response){\n        services\n          .deletePerson(delContact.id)\n          .then(()=>{\n            const changedPersons = persons.filter(person => person.id!==delContact.id)\n            setPersons(changedPersons)\n          })\n          .catch(()=>{\n            console.log(\"Error occured during deletion...\")\n          })\n      }\n  }\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    const nameArray = persons.reduce((arr, person) => arr.concat(person.name.toLowerCase()), [])\n    if(nameArray.includes(newName.trim().toLowerCase())){\n      const response = window.confirm(`The name ${newName} already exists, do you want to edit the number?`)\n      if(response===false){\n        return\n      }\n      const editable = persons.find(person => person.name.toLowerCase() === newName.trim().toLowerCase())\n      \n      const edited = {name:editable.name, id: editable.id, number : newPhone}\n\n      services\n        .updateContact(edited)\n        .then(response => {\n          setPersons(persons.map(person => (person.id!==response.id)? person : response))\n        })\n\n    }else{\n      const newObj = {\n        id: persons.length + 1,\n        name: newName,\n        number: newPhone,\n      };\n      services\n        .addContact(newObj)\n        .then(returnedObj => {\n          setPersons(persons.concat(returnedObj))\n        })\n        .catch(err=>{\n          console.log(\"Error in uploading data!\")\n        })\n    }\n  };\n  return (\n    <div>\n      <Title text = {\"PhoneBook\"} />\n      Search : <input onChange={handleSearchInput}/>\n      <h2>Add new</h2>\n      <Form values = {[handleOnSubmit, handleNameChange, handlePhoneChange]}/>\n      <h2>Numbers</h2>\n      <List persons={persons} searchTerm={searchTerm} handleDeleteClick={handleDeleteClick}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}